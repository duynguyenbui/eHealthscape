// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eHealthscape.HealthRecord.API.Infrastructure;

#nullable disable

namespace eHealthscape.HealthRecord.API.Infrastructure.Migrations
{
    [DbContext(typeof(HealthRecordContext))]
    partial class HealthRecordContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.CareSheet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CareInstruction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("IssueAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("NurseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PatientRecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProgressNote")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatientRecordId");

                    b.ToTable("CarSheet", (string)null);
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.Examination", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("IssueAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MedicalServices")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PatientRecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("Prescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProgressNote")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatientRecordId");

                    b.ToTable("Examination", (string)null);
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Gender")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patient", (string)null);
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.PatientRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("NurseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("PatientRecord", (string)null);
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.VitalSign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BloodPressure")
                        .HasColumnType("numeric");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<DateTime>("MeasureAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("NurseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PatientRecordId")
                        .HasColumnType("uuid");

                    b.Property<int>("Pulse")
                        .HasColumnType("integer");

                    b.Property<int>("RespirationRate")
                        .HasColumnType("integer");

                    b.Property<int>("Spo2")
                        .HasColumnType("integer");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PatientRecordId");

                    b.ToTable("VitalSign", (string)null);
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.CareSheet", b =>
                {
                    b.HasOne("eHealthscape.HealthRecord.API.Model.PatientRecord", "PatientRecord")
                        .WithMany("CareSheets")
                        .HasForeignKey("PatientRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientRecord");
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.Examination", b =>
                {
                    b.HasOne("eHealthscape.HealthRecord.API.Model.PatientRecord", "PatientRecord")
                        .WithMany("Examinations")
                        .HasForeignKey("PatientRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientRecord");
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.PatientRecord", b =>
                {
                    b.HasOne("eHealthscape.HealthRecord.API.Model.Patient", "Patient")
                        .WithOne()
                        .HasForeignKey("eHealthscape.HealthRecord.API.Model.PatientRecord", "PatientId");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.VitalSign", b =>
                {
                    b.HasOne("eHealthscape.HealthRecord.API.Model.PatientRecord", "PatientRecord")
                        .WithMany("VitalSigns")
                        .HasForeignKey("PatientRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientRecord");
                });

            modelBuilder.Entity("eHealthscape.HealthRecord.API.Model.PatientRecord", b =>
                {
                    b.Navigation("CareSheets");

                    b.Navigation("Examinations");

                    b.Navigation("VitalSigns");
                });
#pragma warning restore 612, 618
        }
    }
}
